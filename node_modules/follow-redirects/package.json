{
  "_args": [
    [
      {
        "raw": "follow-redirects@^1.0.0",
        "scope": null,
        "escapedName": "follow-redirects",
        "name": "follow-redirects",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/var/www/html/angular/simulacoes2/node_modules/http-proxy"
    ]
  ],
  "_from": "follow-redirects@^1.0.0",
  "_hasShrinkwrap": false,
  "_id": "follow-redirects@1.7.0",
  "_location": "/follow-redirects",
  "_nodeVersion": "10.14.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/follow-redirects_1.7.0_1550094042182_0.6861824070554166"
  },
  "_npmUser": {
    "name": "rubenverborgh",
    "email": "ruben@verborgh.org"
  },
  "_npmVersion": "6.5.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "follow-redirects@^1.0.0",
    "scope": null,
    "escapedName": "follow-redirects",
    "name": "follow-redirects",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/http-proxy"
  ],
  "_resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.7.0.tgz",
  "_shasum": "489ebc198dc0e7f64167bd23b03c4c19b5784c76",
  "_shrinkwrap": null,
  "_spec": "follow-redirects@^1.0.0",
  "_where": "/var/www/html/angular/simulacoes2/node_modules/http-proxy",
  "author": {
    "name": "Ruben Verborgh",
    "email": "ruben@verborgh.org",
    "url": "https://ruben.verborgh.org/"
  },
  "bugs": {
    "url": "https://github.com/follow-redirects/follow-redirects/issues"
  },
  "contributors": [
    {
      "name": "Olivier Lalonde",
      "email": "olalonde@gmail.com",
      "url": "http://www.syskall.com"
    },
    {
      "name": "James Talmage",
      "email": "james@talmage.io"
    }
  ],
  "dependencies": {
    "debug": "^3.2.6"
  },
  "description": "HTTP and HTTPS modules that follow redirects.",
  "devDependencies": {
    "concat-stream": "^1.6.0",
    "coveralls": "^3.0.2",
    "eslint": "^4.19.1",
    "express": "^4.16.2",
    "lolex": "^3.0.0",
    "mocha": "^5.0.0",
    "nyc": "^11.8.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-m/pZQy4Gj287eNy94nivy5wchN3Kp+Q5WgUPNy5lJSZ3sgkVKSYV/ZChMAQVIgx1SqfZ2zBZtPA2YlXIWxxJOQ==",
    "shasum": "489ebc198dc0e7f64167bd23b03c4c19b5784c76",
    "tarball": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.7.0.tgz",
    "fileCount": 6,
    "unpackedSize": 21525,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcZI7aCRA9TVsSAnZWagAA4wYP/i0UEluhn6QsNUW7FsQC\nV6csdzuDsSeSgskqm/CI6rqTxpXxSMUMG4GtFfnynrAEYz2dwa+KNonZOvhc\nP0DRvRJerUwyblF6deVA9cYDNj8WSE1ftOjQp6X7r5LW4jud+vTM+tCYFvIo\nbJW1IaTunyz1HNemveYSwC8W/qeCuDY7UlLOoz7IWypivuLZSwjKfcL7BVjO\nVwn77IivSNNLSbDtcmXIiR6zGVBSkY9JMXPM4bBC5kJytWO5QwE6OzGY0xNq\nTDnBh0hHNRw3RkcIotM/U0YVais8HuaDr2WO7/N3pGfqtLVHT92hxZtIcnSu\nDJFzs8ptzBB5jzx2/uD6wpXq9+fNxc/EcbeH9GFNBxMA9Ks4rT2VdbjJnkFu\npWfAwaYKcCTz0CRffkeN64Py4NDiwQ0MuNYlKlGthTzz08f3c7Z/DssV+ffD\neVrZ8C0Z400+dsMdvGH74DKw+8qYaVXZ++Yaxc8PoG+mKnW49IAa5nN7huL5\nvNNFGES6lVnOtHPSJpdUK9MAJGr8L1PTBqZYr8ALVcUkHeKzb/3Z3Z8NfE/i\nCUdxcsCoP+C52bmESwhJIN3SLSuMb4Nbx+/s3f0zx+gZ2HieGQicYyRybBEj\nkkzparnDuGJ+63+IWc4rbEv0vD7iw8EX5SazL+/DDAH0X9jsU6gkZYIVc6SK\neyjn\r\n=xy7d\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4.0"
  },
  "files": [
    "*.js"
  ],
  "gitHead": "301e0b45122faeb8fad8b887b6c73ef36538d628",
  "homepage": "https://github.com/follow-redirects/follow-redirects",
  "keywords": [
    "http",
    "https",
    "url",
    "redirect",
    "client",
    "location",
    "utility"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jamestalmage",
      "email": "james@talmage.io"
    },
    {
      "name": "olalonde",
      "email": "olalonde@gmail.com"
    },
    {
      "name": "rubenverborgh",
      "email": "ruben.verborgh@gmail.com"
    }
  ],
  "name": "follow-redirects",
  "nyc": {
    "reporter": [
      "lcov",
      "text"
    ]
  },
  "optionalDependencies": {},
  "readme": "## Follow Redirects\n\nDrop-in replacement for Nodes `http` and `https` that automatically follows redirects.\n\n[![npm version](https://img.shields.io/npm/v/follow-redirects.svg)](https://www.npmjs.com/package/follow-redirects)\n[![Build Status](https://travis-ci.org/follow-redirects/follow-redirects.svg?branch=master)](https://travis-ci.org/follow-redirects/follow-redirects)\n[![Coverage Status](https://coveralls.io/repos/follow-redirects/follow-redirects/badge.svg?branch=master)](https://coveralls.io/r/follow-redirects/follow-redirects?branch=master)\n[![Dependency Status](https://david-dm.org/follow-redirects/follow-redirects.svg)](https://david-dm.org/follow-redirects/follow-redirects)\n[![npm downloads](https://img.shields.io/npm/dm/follow-redirects.svg)](https://www.npmjs.com/package/follow-redirects)\n\n`follow-redirects` provides [request](https://nodejs.org/api/http.html#http_http_request_options_callback) and [get](https://nodejs.org/api/http.html#http_http_get_options_callback)\n methods that behave identically to those found on the native [http](https://nodejs.org/api/http.html#http_http_request_options_callback) and [https](https://nodejs.org/api/https.html#https_https_request_options_callback)\n modules, with the exception that they will seamlessly follow redirects.\n\n```javascript\nvar http = require('follow-redirects').http;\nvar https = require('follow-redirects').https;\n\nhttp.get('http://bit.ly/900913', function (response) {\n  response.on('data', function (chunk) {\n    console.log(chunk);\n  });\n}).on('error', function (err) {\n  console.error(err);\n});\n```\n\nYou can inspect the final redirected URL through the `responseUrl` property on the `response`.\nIf no redirection happened, `responseUrl` is the original request URL.\n\n```javascript\nhttps.request({\n  host: 'bitly.com',\n  path: '/UHfDGO',\n}, function (response) {\n  console.log(response.responseUrl);\n  // 'http://duckduckgo.com/robots.txt'\n});\n```\n\n## Options\n### Global options\nGlobal options are set directly on the `follow-redirects` module:\n\n```javascript\nvar followRedirects = require('follow-redirects');\nfollowRedirects.maxRedirects = 10;\nfollowRedirects.maxBodyLength = 20 * 1024 * 1024; // 20 MB\n```\n\nThe following global options are supported:\n\n- `maxRedirects` (default: `21`) – sets the maximum number of allowed redirects; if exceeded, an error will be emitted.\n\n- `maxBodyLength` (default: 10MB) – sets the maximum size of the request body; if exceeded, an error will be emitted.\n\n\n### Per-request options\nPer-request options are set by passing an `options` object:\n\n```javascript\nvar url = require('url');\nvar followRedirects = require('follow-redirects');\n\nvar options = url.parse('http://bit.ly/900913');\noptions.maxRedirects = 10;\nhttp.request(options);\n```\n\nIn addition to the [standard HTTP](https://nodejs.org/api/http.html#http_http_request_options_callback) and [HTTPS options](https://nodejs.org/api/https.html#https_https_request_options_callback),\nthe following per-request options are supported:\n- `followRedirects` (default: `true`) – whether redirects should be followed.\n\n- `maxRedirects` (default: `21`) – sets the maximum number of allowed redirects; if exceeded, an error will be emitted.\n\n- `maxBodyLength` (default: 10MB) – sets the maximum size of the request body; if exceeded, an error will be emitted.\n\n- `agents` (default: `undefined`) – sets the `agent` option per protocol, since HTTP and HTTPS use different agents. Example value: `{ http: new http.Agent(), https: new https.Agent() }`\n\n- `trackRedirects` (default: `false`) – whether to store the redirected response details into the `redirects` array on the response object.\n\n\n### Advanced usage\nBy default, `follow-redirects` will use the Node.js default implementations\nof [`http`](https://nodejs.org/api/http.html)\nand [`https`](https://nodejs.org/api/https.html).\nTo enable features such as caching and/or intermediate request tracking,\nyou might instead want to wrap `follow-redirects` around custom protocol implementations:\n\n```javascript\nvar followRedirects = require('follow-redirects').wrap({\n  http: require('your-custom-http'),\n  https: require('your-custom-https'),\n});\n```\n\nSuch custom protocols only need an implementation of the `request` method.\n\n## Browser Usage\n\nDue to the way the browser works,\nthe `http` and `https` browser equivalents perform redirects by default.\n\nBy requiring `follow-redirects` this way:\n```javascript\nvar http = require('follow-redirects/http');\nvar https = require('follow-redirects/https');\n```\nyou can easily tell webpack and friends to replace\n`follow-redirect` by the built-in versions:\n\n```json\n{\n  \"follow-redirects/http\"  : \"http\",\n  \"follow-redirects/https\" : \"https\"\n}\n```\n\n## Contributing\n\nPull Requests are always welcome. Please [file an issue](https://github.com/follow-redirects/follow-redirects/issues)\n detailing your proposal before you invest your valuable time. Additional features and bug fixes should be accompanied\n by tests. You can run the test suite locally with a simple `npm test` command.\n\n## Debug Logging\n\n`follow-redirects` uses the excellent [debug](https://www.npmjs.com/package/debug) for logging. To turn on logging\n set the environment variable `DEBUG=follow-redirects` for debug output from just this module. When running the test\n suite it is sometimes advantageous to set `DEBUG=*` to see output from the express server as well.\n\n## Authors\n\n- Olivier Lalonde (olalonde@gmail.com)\n- James Talmage (james@talmage.io)\n- [Ruben Verborgh](https://ruben.verborgh.org/)\n\n## License\n\n[MIT License](https://github.com/follow-redirects/follow-redirects/blob/master/LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/follow-redirects/follow-redirects.git"
  },
  "scripts": {
    "lint": "eslint *.js test",
    "mocha": "nyc mocha",
    "test": "npm run lint && npm run mocha"
  },
  "version": "1.7.0"
}
